<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>PM_convertBooleanToText</name>
        <uuid>_a-0000daed-038e-8000-9ba2-011c48011c48_125136</uuid>
        <description></description>
        <parentUuid>_a-0000db9b-f030-8000-9ba2-011c48011c48_5655</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>load(
local!orgList:fn!apply(
  #&quot;_a-0000db9b-f030-8000-9ba2-011c48011c48_5645&quot;(ri!newProposal,_),
fn!where(
  #&quot;_a-0000db9b-f030-8000-9ba2-011c48011c48_5640&quot;(ri!oldProposal,ri!newProposal)
  
  )
  
  ), 
  local!list:apply(left(_,1000),local!orgList),
local!fal:updatearray(local!list,wherecontains(tostring(false()),local!list),&quot;No&quot;),
  local!tru:updatearray(local!fal,wherecontains(tostring(true()),local!fal),&quot;Yes&quot;),
  
  local!empty:updatearray(local!tru,wherecontains(null(),local!tru),&quot;Not Specified&quot;),
  local!empty
)</definition>
        <namedTypedValue>
            <name>oldProposal</name>
            <type>
                <name>Variant</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>newProposal</name>
            <type>
                <name>Variant</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
    <typedValue>
        <type>
            <name>RuleTestConfig?list</name>
            <namespace>http://www.appian.com/ae/types/2009</namespace>
        </type>
        <value>
            <el>
                <a:name/>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
                    <a:nameRef>oldProposal</a:nameRef>
                    <a:id/>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
                    <a:nameRef>newProposal</a:nameRef>
                    <a:id/>
                </a:ruleInputTestConfigs>
            </el>
        </value>
    </typedValue>
</contentHaul>
